(window.webpackJsonp=window.webpackJsonp||[]).push([[14],{"./lib/Validator.mdx":function(e,t,n){"use strict";n.r(t),n.d(t,"default",function(){return c});var a=n("./node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js"),b=(n("react"),n("./node_modules/@mdx-js/react/dist/index.es.js")),r={},l="wrapper";function c(e){var t=e.components,n=Object(a.a)(e,["components"]);return Object(b.b)(l,Object.assign({},r,n,{components:t,mdxType:"MDXLayout"}),Object(b.b)("h1",{id:"api"},"API"),Object(b.b)("table",null,Object(b.b)("thead",{parentName:"table"},Object(b.b)("tr",{parentName:"thead"},Object(b.b)("th",Object.assign({parentName:"tr"},{align:null}),"Method"),Object(b.b)("th",Object.assign({parentName:"tr"},{align:null}),"Example"),Object(b.b)("th",Object.assign({parentName:"tr"},{align:null}),"Remark"))),Object(b.b)("tbody",{parentName:"table"},Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object.assign({parentName:"tr"},{align:null}),Object(b.b)("inlineCode",{parentName:"td"},"constructor(modelIds = {}, rules = {})")),Object(b.b)("td",Object.assign({parentName:"tr"},{align:null})),Object(b.b)("td",Object.assign({parentName:"tr"},{align:null}))),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object.assign({parentName:"tr"},{align:null}),Object(b.b)("inlineCode",{parentName:"td"},"getModelIds()")),Object(b.b)("td",Object.assign({parentName:"tr"},{align:null})),Object(b.b)("td",Object.assign({parentName:"tr"},{align:null}))),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object.assign({parentName:"tr"},{align:null}),Object(b.b)("inlineCode",{parentName:"td"},"getRules()")),Object(b.b)("td",Object.assign({parentName:"tr"},{align:null})),Object(b.b)("td",Object.assign({parentName:"tr"},{align:null}))))),Object(b.b)("h1",{id:"prepare"},"Prepare"),Object(b.b)("pre",null,Object(b.b)("code",Object.assign({parentName:"pre"},{className:"language-json"}),'{\n  "id1": {\n    "deps": "dependencies: option, can be string[reg], string array or object",\n    "func": "custom rule by function",\n    "rule1": {\n      "field": "x.xx.xxx, this is i18n mesg for required rule"\n    },\n    "rule2": {\n      "exec": "enable function"\n    }\n  }\n}\n')))}c&&c===Object(c)&&Object.isExtensible(c)&&Object.defineProperty(c,"__filemeta",{enumerable:!0,configurable:!0,value:{name:"MDXContent",filename:"lib/Validator.mdx"}}),c.isMDXComponent=!0}}]);